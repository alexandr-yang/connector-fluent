
#Область ОписаниеПеременных

// Контекст обработчика
Перем _Контекст;

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Инициализировать обработчик HTTP-ответа
//
// Параметры:
//  Ответ - Структура - см. КоннекторHTTP.НовыйОтвет()
//
// Возвращаемое значение:
//  ОбработкаОбъект.КонструкторHTTPЗапроса
//
Функция Инициализировать(Ответ) Экспорт
	
	_Контекст = НовыйКонтекст();
	ЗаполнитьЗначенияСвойств(_Контекст.Ответ, Ответ);
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Код состояния "Информация" (100...199)
//
// Возвращаемое значение:
//  Булево
//
Функция КодСостоянияИнформация() Экспорт
	
	Возврат _Контекст.Ответ.КодСостояния >= 100
		И _Контекст.Ответ.КодСостояния < 200;
	
КонецФункции

// Код состояния "Успешно" (200...299)
//
// Возвращаемое значение:
//  Булево
//
Функция КодСостоянияУспешно() Экспорт
	
	Возврат _Контекст.Ответ.КодСостояния >= 200
		И _Контекст.Ответ.КодСостояния < 300;
	
КонецФункции

// Код состояния "Переадресация" (300...399)
//
// Возвращаемое значение:
//  Булево
//
Функция КодСостоянияПереадресация() Экспорт
	
	Возврат _Контекст.Ответ.КодСостояния >= 300
		И _Контекст.Ответ.КодСостояния < 400;
	
КонецФункции

// Код состояния "Ошибка клиента" (400...499)
//
// Возвращаемое значение:
//  Булево
//
Функция КодСостоянияОшибкаКлиента() Экспорт
	
	Возврат _Контекст.Ответ.КодСостояния >= 400
		И _Контекст.Ответ.КодСостояния < 500;
	
КонецФункции

// Код состояния "Ошибка сервера" (500...599)
//
// Возвращаемое значение:
//  Булево
//
Функция КодСостоянияОшибкаСервера() Экспорт
	
	Возврат _Контекст.Ответ.КодСостояния >= 500
		И _Контекст.Ответ.КодСостояния < 600;
	
КонецФункции

// Код состояния равен значению
//
// Параметры:
//  КодСостояния - Число
//
// Возвращаемое значение:
//  Булево
//
Функция КодСостоянияРавен(КодСостояния) Экспорт
	
	Возврат _Контекст.Ответ.КодСостояния = КодСостояния;
	
КонецФункции

// Получить код состояния
//
// Возвращаемое значение:
//  Число
//
Функция КодСостояния() Экспорт
	
	Возврат _Контекст.Ответ.КодСостояния;
	
КонецФункции

// Получить тело ответа как строку
//
// Параметры:
//   Кодировка - Строка, КодировкаТекста
//
// Возвращаемое значение:
//  Строка
//
Функция ТелоОтветаКакСтрока(Кодировка = Неопределено) Экспорт
	
	Возврат КоннекторHTTP.КакТекст(_Контекст.Ответ, Кодировка); // BSLLS:MissingCommonModuleMethod-off
	
КонецФункции

// Получить и обработать тело ответа как JSON 
//
// Параметры:
//  ПараметрыПреобразованияJSON - Структура:
//    * ПрочитатьВСоответствие - Булево
//    * ФорматДатыJSON - ФорматДатыJSON
//    * ИменаСвойствСоЗначениямиДата -  Массив из Строка, Строка
//    * ИмяФункцииВосстановления - Строка
//    * МодульФункцииВосстановления - Произвольный
//    * ДополнительныеПараметрыФункцииВосстановления - Произвольный
//    * ИменаСвойствДляОбработкиВосстановления - Массив
//    * МаксимальнаяВложенность - Число
//
// Возвращаемое значение:
//  Структура, Соответствие, Массив
//
Функция ТелоОтветаКакJson(ПараметрыПреобразованияJSON = Неопределено) Экспорт
	
	Возврат КоннекторHTTP.КакJson(_Контекст.Ответ, ПараметрыПреобразованияJSON); // BSLLS:MissingCommonModuleMethod-off
	
КонецФункции

// Получить и обработать тело ответа как XDTO.
//
// Параметры:
//  ПараметрыЧтенияXML - ПараметрыЧтенияXML
//  НаборСхемXML - НаборСхемXML
//  Кодировка - Строка, КодировкаТекста
//
// Возвращаемое значение:
//  ОбъектXDTO, СписокXDTO
//
Функция ТелоОтветаКакXDTO(ПараметрыЧтенияXML = Неопределено, НаборСхемXML = Неопределено, Кодировка = Неопределено) Экспорт
	
	Возврат КоннекторHTTP.КакXDTO(_Контекст.Ответ, ПараметрыЧтенияXML, НаборСхемXML, Кодировка); // BSLLS:MissingCommonModuleMethod-off
	
КонецФункции

// Получить тело ответа как двоичные данные
//
// Возвращаемое значение:
//  ДвоичныеДанные
//
Функция ТелоОтветаКакДвоичныеДанные() Экспорт
	
	Возврат КоннекторHTTP.КакДвоичныеДанные(_Контекст.Ответ); // BSLLS:MissingCommonModuleMethod-off
	
КонецФункции

// Получить тело ответа как строку, предназначенного для использования в ВызватьИсключение.
//
// Параметры:
//   ТекстДляПользователя - Строка
//
// Возвращаемое значение:
//   Строка
//
Функция ТелоОтветаКакИсключение(ТекстДляПользователя = Неопределено) Экспорт
	
	Возврат КоннекторHTTP.КакИсключение(_Контекст.Ответ, ТекстДляПользователя); // BSLLS:MissingCommonModuleMethod-off
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Конструктор нового контекст
//
// Возвращаемое значение:
//  Структура:
//    * Ответ - Структура - см. КоннекторHTTP.НовыйОтвет()
//
Функция НовыйКонтекст()
	
	Контекст = Новый Структура;
	Контекст.Вставить("Ответ", КоннекторHTTP.НовыйОтвет()); // BSLLS:MissingCommonModuleMethod-off
	
	Возврат Контекст;
	
КонецФункции

#КонецОбласти
